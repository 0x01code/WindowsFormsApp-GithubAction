name: WindowsFormsApp-GithubAction Build

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: windows-latest

    env:
      dir_name: WindowsFormsApp-GithubAction
      Solution_Name: WindowsFormsApp-GithubAction.sln

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.1.3

      - name: Setup NuGet.exe for use with actions
        # You may pin to the exact commit or the version.
        # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
        uses: NuGet/setup-nuget@v1.1.1

      - name: Restore NuGet packages
        run: nuget restore $env:Solution_Name

      - name: Build the Solution
        run: msbuild $env:Solution_Name /p:Configuration=Release

      - name: Create output directory
        run: New-Item -ItemType Directory -Path C:\builtfiles\$env:dir_name -Force > $null
        continue-on-error: true

      - name: Copy release files for upload
        run: Copy-Item -Path $env:dir_name\bin\Release\* -Destination C:\builtfiles\$env:dir_name\ -Recurse

      - uses: actions/upload-artifact@v3.1.1
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
        with:
          name: $env:dir_name
          path: C:\builtfiles\$env:dir_name
          if-no-files-found: error

      - uses: actions/download-artifact@v3
        with:
          name: $env:dir_name
          path: C:\builtfiles\$env:dir_name

      - name: Archive Release
        uses: thedoctor0/zip-release@main
        with:
          type: "zip"
          filename: $env:dir_name.zip
          path: C:\builtfiles\$env:dir_name

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{  github.ref_name }}
          release_name: v${{  github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./$env:dir_name.zip
          asset_name: $env:dir_name.zip
          asset_content_type: application/zip
